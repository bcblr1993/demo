name: deploy springboot
on:
  push:
    tags:
      - v*
  # 手动运行
  workflow_dispatch: {}

jobs:
  build-springboot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Build with SpringBoot
        run: mvn -DskipTests package
      - uses: actions/upload-artifact@v2
        with:
          name: demo.jar
          path: target/demo.jar

  build-image:
    runs-on: ubuntu-latest
    needs:
      - build-springboot
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: demo.jar
          path: target/
      - id: publish-docker
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: xiaochen2019/demo
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_semver: true
    outputs:
      tag: ${{ steps.publish-docker.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - uses: actions/checkout@v2
      - name: copy docker-compose.yml file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          source: "docker-compose.yml"
          target: "services/demo/"
      - uses: appleboy/ssh-action@master
        env:
          DOCKER_IMAGE: xiaochen2019/demo:${{ needs.build-image.outputs.tag }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          envs: DOCKER_IMAGE
          script: |
            cd ~/services/demo/
            docker pull "$DOCKER_IMAGE"
            DOCKER_IMAGE="$DOCKER_IMAGE" docker-compose down
            DOCKER_IMAGE="$DOCKER_IMAGE" docker-compose up -d

